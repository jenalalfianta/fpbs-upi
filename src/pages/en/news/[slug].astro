---
import Layout from '@/layouts/Layout.astro';
import { getCollection } from 'astro:content';
import slugify from 'slugify';

export async function getStaticPaths() {
const posts = (await getCollection('berita')).filter(post => post.data.lang === 'en');

  return posts.map((post) => ({
    params: {
      slug: slugify(post.data.title, { lower: true, strict: true }),
    },
  }));
}

const { slug } = Astro.params;
const posts = (await getCollection('berita')).filter(post => post.data.lang === 'en');

const post = posts.find(p => slugify(p.data.title, { lower: true, strict: true }) === slug);
if (!post) throw new Error(`Post not found for slug: ${slug}`);
const { title, pubDate, image, description, tags } = post.data;
const { Content } = await post.render();

const related = posts
  .filter(p => slugify(p.data.title, { lower: true, strict: true }) !== slug)
  .sort((a, b) => {
    return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime();
  })
  .slice(0, 5);

const fixHtml = (url) => `${url}.html`;

// Format date in English
const formattedDate = new Date(pubDate).toLocaleDateString('en-US', {
  day: 'numeric',
  month: 'long',
  year: 'numeric'
});
---

<Layout pageTitle={title}>
  <main class="bg-white dark:bg-gray-900 pt-10 md:pt-10 pb-24 antialiased">
    <div class="px-4 mx-auto max-w-screen-xl">
      <article class="prose mx-auto w-full max-w-3xl format format-sm sm:format-base lg:format-lg format-blue dark:prose-invert">
        <header class="mb-6">
          <h1 class="mb-2 text-3xl md:text-4xl font-extrabold leading-tight text-gray-900 dark:text-white">
            {title}
          </h1>
          <p class="text-sm text-gray-500 dark:text-gray-400">
            {formattedDate}
          </p>
        </header>

        {image && (
          <figure class="mb-6">
            <img src={image.url} alt={image.alt} class="rounded-lg" />
            {image.alt && (
              <figcaption class="text-center text-sm text-gray-500 dark:text-gray-400 mt-2">
                {image.alt}
              </figcaption>
            )}
          </figure>
        )}

        <Content />
      </article>
    </div>
  </main>

  <aside aria-label="Related articles" class="bg-gray-50 dark:bg-gray-800 pt-10 md:pt-10 pb-20">
    <div class="px-4 mx-auto max-w-screen-xl">
      <h2 class="mb-8 text-3xl font-bold text-gray-900 dark:text-white">
        Other News
      </h2>
      <div class="grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5">
        {related.map(item => {
          const relatedUrl = fixHtml(`/en/news/${slugify(item.data.title, { lower: true, strict: true })}`);
          return (
            <article class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden shadow-md hover:shadow-lg transition flex flex-col h-full">
              {item.data.image && (
                <a href={relatedUrl}>
                  <img src={item.data.image.url} alt={item.data.image.alt} class="w-full h-32 object-cover" />
                </a>
              )}
              <div class="p-4 flex flex-col flex-1">
                <h3 class="text-base font-semibold mb-1 text-gray-900 dark:text-white leading-snug">
                  <a href={relatedUrl}>{item.data.title}</a>
                </h3>
                <p class="text-sm text-gray-700 dark:text-gray-300 line-clamp-2 mt-auto">
                  {item.data.description ?? ''}
                </p>
              </div>
            </article>
          );
        })}
      </div>
    </div>
  </aside>
</Layout>
